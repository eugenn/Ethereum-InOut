// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[],"name":"sendToHolders","outputs":[],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"holders","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"inWallet","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"type":"function"},{"constant":false,"inputs":[],"name":"kill","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"standard","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":true,"inputs":[],"name":"price","outputs":[{"name":"","type":"uint8"}],"type":"function"},{"constant":true,"inputs":[],"name":"hManager","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[],"name":"getManager","outputs":[{"name":"","type":"address"}],"type":"function"},{"inputs":[{"name":"tokenName","type":"string"},{"name":"decimalUnits","type":"uint8"},{"name":"tokenSymbol","type":"string"},{"name":"inputWallet","type":"address"}],"type":"constructor"}],
    binary: "60a060405260096060527f546f6b656e20302e3600000000000000000000000000000000000000000000006080526001805460008290527f546f6b656e20302e36000000000000000000000000000000000000000000001282556100b4907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf66020600283861615610100026000190190931692909204601f01919091048101905b8082111561016e57600081556001016100a0565b50506004805461ff001916610a00179055600060055560405161098b388190039081908339810160405280805182019190602001805190602001909190805182019190602001805190602001909190505060008054600160a060020a031916331790558360026000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061017257805160ff19168380011785555b506101a29291506100a0565b5090565b82800160010185558215610162579182015b82811115610162578251826000505591602001919060010190610184565b50508160036000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101fb57805160ff19168380011785555b5061022b9291506100a0565b828001600101855582156101ef579182015b828111156101ef57825182600050559160200191906001019061020d565b50506004805460ff19168417905560088054600160a060020a03191682179055604051309061025d8061029d8339018082600160a060020a03168152602001915050604051809103906000f060098054600160a060020a03191691909117905550505050610491806104fa6000396000f3606060408190526706f05b59d3b2000060035560208061025d8339506080604052516000805433600160a060020a03199182161782556001805490911690921790915561020c90819061005190396000f3606060405260e060020a60003504632a11ced0811461003c57806341c0e1b514610082578063e3468ed1146100aa578063e3c0b907146100f0575b005b6101c160043560028054829081101561000257506000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0154600160a060020a031681565b61003a60005433600160a060020a03908116911614156101cb57600054600160a060020a0316ff5b61003a600435600280546001810180835582818380158290116101cd578183600052602060002091820191016101cd91905b8082111561020157600081556001016100dc565b61003a600435600354600160a060020a033016319081038290046000805b60025460ff83161015610205576002805460ff8416908110156100025760008290527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01548154600160a060020a0391909116925060ff841690811015610002577f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0154604051600160a060020a03919091169150600090859082818181858883f150505050506001919091019061010e565b6060908152602090f35b565b50505091909060005260206000209001600050805473ffffffffffffffffffffffffffffffffffffffff1916831790555050565b5090565b505050505056606060405236156100a35760e060020a600035046306fdde03811461015e57806318160ddd146101b85780631b9a85d7146101c15780632a11ced0146102335780632a36b02814610279578063313ce5671461028b57806341c0e1b5146102975780635a3b7e42146102c157806370a082311461031d57806395d89b4114610335578063a035b1fe14610391578063a5c863d4146103a3578063d5009584146103b5575b6004546005805461010090920460ff16670de0b6b3a7640000340402918201905533600160a060020a0390811660008181526006602052604081208054850190556009547fe3468ed10000000000000000000000000000000000000000000000000000000060609081526064939093526103d59493169163e3468ed19160849160248183876161da5a03f115610002575050600854604051600160a060020a03919091169150600090349082818181858883f1505050505050565b6103d760028054602060018216156101000260001901909116829004601f810182900490910260809081016040526060828152929190828280156104875780601f1061045c57610100808354040283529160200191610487565b61044560055481565b6004546005546009547fe3c0b90700000000000000000000000000000000000000000000000000000000606090815261010090930460ff1690910460648190526103d5929091600160a060020a03169063e3c0b9079060849060009060248183876161da5a03f1156100025750505050565b6103c260043560078054829081101561000257506000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880154600160a060020a031681565b6103c2600854600160a060020a031681565b61044f60045460ff1681565b6103d5600054600160a060020a039081163391909116141561048f57600054600160a060020a0316ff5b6103d7600180546020600282841615610100026000190190921691909104601f810182900490910260809081016040526060828152929190828280156104875780601f1061045c57610100808354040283529160200191610487565b61044560043560066020526000908152604090205481565b6103d7600380546020601f600260018416156101000260001901909316929092049182018190040260809081016040526060828152929190828280156104875780601f1061045c57610100808354040283529160200191610487565b61044f60045460ff6101009091041681565b6103c2600954600160a060020a031681565b600954600160a060020a03165b600160a060020a03166060908152602090f35b005b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156104375780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6060908152602090f35b60ff166060908152602090f35b820191906000526020600020905b81548152906001019060200180831161046a57829003601f168201915b505050505081565b56",
    unlinked_binary: "60a060405260096060527f546f6b656e20302e3600000000000000000000000000000000000000000000006080526001805460008290527f546f6b656e20302e36000000000000000000000000000000000000000000001282556100b4907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf66020600283861615610100026000190190931692909204601f01919091048101905b8082111561016e57600081556001016100a0565b50506004805461ff001916610a00179055600060055560405161098b388190039081908339810160405280805182019190602001805190602001909190805182019190602001805190602001909190505060008054600160a060020a031916331790558360026000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061017257805160ff19168380011785555b506101a29291506100a0565b5090565b82800160010185558215610162579182015b82811115610162578251826000505591602001919060010190610184565b50508160036000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101fb57805160ff19168380011785555b5061022b9291506100a0565b828001600101855582156101ef579182015b828111156101ef57825182600050559160200191906001019061020d565b50506004805460ff19168417905560088054600160a060020a03191682179055604051309061025d8061029d8339018082600160a060020a03168152602001915050604051809103906000f060098054600160a060020a03191691909117905550505050610491806104fa6000396000f3606060408190526706f05b59d3b2000060035560208061025d8339506080604052516000805433600160a060020a03199182161782556001805490911690921790915561020c90819061005190396000f3606060405260e060020a60003504632a11ced0811461003c57806341c0e1b514610082578063e3468ed1146100aa578063e3c0b907146100f0575b005b6101c160043560028054829081101561000257506000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0154600160a060020a031681565b61003a60005433600160a060020a03908116911614156101cb57600054600160a060020a0316ff5b61003a600435600280546001810180835582818380158290116101cd578183600052602060002091820191016101cd91905b8082111561020157600081556001016100dc565b61003a600435600354600160a060020a033016319081038290046000805b60025460ff83161015610205576002805460ff8416908110156100025760008290527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01548154600160a060020a0391909116925060ff841690811015610002577f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0154604051600160a060020a03919091169150600090859082818181858883f150505050506001919091019061010e565b6060908152602090f35b565b50505091909060005260206000209001600050805473ffffffffffffffffffffffffffffffffffffffff1916831790555050565b5090565b505050505056606060405236156100a35760e060020a600035046306fdde03811461015e57806318160ddd146101b85780631b9a85d7146101c15780632a11ced0146102335780632a36b02814610279578063313ce5671461028b57806341c0e1b5146102975780635a3b7e42146102c157806370a082311461031d57806395d89b4114610335578063a035b1fe14610391578063a5c863d4146103a3578063d5009584146103b5575b6004546005805461010090920460ff16670de0b6b3a7640000340402918201905533600160a060020a0390811660008181526006602052604081208054850190556009547fe3468ed10000000000000000000000000000000000000000000000000000000060609081526064939093526103d59493169163e3468ed19160849160248183876161da5a03f115610002575050600854604051600160a060020a03919091169150600090349082818181858883f1505050505050565b6103d760028054602060018216156101000260001901909116829004601f810182900490910260809081016040526060828152929190828280156104875780601f1061045c57610100808354040283529160200191610487565b61044560055481565b6004546005546009547fe3c0b90700000000000000000000000000000000000000000000000000000000606090815261010090930460ff1690910460648190526103d5929091600160a060020a03169063e3c0b9079060849060009060248183876161da5a03f1156100025750505050565b6103c260043560078054829081101561000257506000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880154600160a060020a031681565b6103c2600854600160a060020a031681565b61044f60045460ff1681565b6103d5600054600160a060020a039081163391909116141561048f57600054600160a060020a0316ff5b6103d7600180546020600282841615610100026000190190921691909104601f810182900490910260809081016040526060828152929190828280156104875780601f1061045c57610100808354040283529160200191610487565b61044560043560066020526000908152604090205481565b6103d7600380546020601f600260018416156101000260001901909316929092049182018190040260809081016040526060828152929190828280156104875780601f1061045c57610100808354040283529160200191610487565b61044f60045460ff6101009091041681565b6103c2600954600160a060020a031681565b600954600160a060020a03165b600160a060020a03166060908152602090f35b005b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156104375780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6060908152602090f35b60ff166060908152602090f35b820191906000526020600020905b81548152906001019060200180831161046a57829003601f168201915b505050505081565b56",
    address: "",
    generated_with: "2.0.9",
    contract_name: "MyToken"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("MyToken error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("MyToken error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("MyToken error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("MyToken error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.MyToken = Contract;
  }

})();
