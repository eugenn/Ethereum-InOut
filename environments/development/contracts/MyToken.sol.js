// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[],"name":"sendToHolders","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"holders","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"inWallet","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[],"name":"getBalanceManager","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"type":"function"},{"constant":false,"inputs":[],"name":"kill","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"standard","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"addr","type":"address"}],"name":"getBalanceInEth","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":false,"inputs":[{"name":"amount","type":"uint256"},{"name":"conversionRate","type":"uint256"}],"name":"convert","outputs":[{"name":"convertedAmount","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"price","outputs":[{"name":"","type":"uint8"}],"type":"function"},{"constant":true,"inputs":[],"name":"hManager","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"addr","type":"address"}],"name":"setInwallet","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"nPrice","type":"uint8"}],"name":"setPrice","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"getTotalSupply","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[],"name":"getManager","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"addr","type":"address"}],"name":"getBalance","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"inputs":[{"name":"tokenName","type":"string"},{"name":"decimalUnits","type":"uint8"},{"name":"tokenSymbol","type":"string"},{"name":"inputWallet","type":"address"}],"type":"constructor"}],
    binary: "60a060405260096060527f546f6b656e20302e3600000000000000000000000000000000000000000000006080526001805460008290527f546f6b656e20302e36000000000000000000000000000000000000000000001282556100b4907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf66020600283861615610100026000190190931692909204601f01919091048101905b8082111561016e57600081556001016100a0565b50506004805461ff001916610a001790556000600555604051610af7388190039081908339810160405280805182019190602001805190602001909190805182019190602001805190602001909190505060008054600160a060020a031916331790558360026000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061017257805160ff19168380011785555b506101a29291506100a0565b5090565b82800160010185558215610162579182015b82811115610162578251826000505591602001919060010190610184565b50508160036000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101fb57805160ff19168380011785555b5061022b9291506100a0565b828001600101855582156101ef579182015b828111156101ef57825182600050559160200191906001019061020d565b50506004805460ff19168417905560088054600160a060020a0319168217905560405161020a8061028b833901809050604051809103906000f060098054600160a060020a03191691909117905550505050610662806104956000396000f360606040526706f05b59d3b200006002556101ec8061001e6000396000f3606060405260e060020a600035046312065fe0811461003c5780632a11ced014610052578063e3468ed114610098578063e3c0b907146100dc575b005b30600160a060020a0316315b6060908152602090f35b61004860043560018054829081101561000257506000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60154600160a060020a031681565b61003a6004356001805480820180835582818380158290116101ad578183600052602060002091820191016101ad91905b808211156101e1576000815584016100c9565b61003a600435600254600160a060020a033016319081038290046000805b60015460ff831610156101e5576001805460ff8416908110156100025760008290527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601548154600160a060020a0391909116925060ff841690811015610002577fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60154604051600160a060020a03919091169150600090859082818181858883f15050505050600191909101906100fa565b50505091909060005260206000209001600050805473ffffffffffffffffffffffffffffffffffffffff1916831790555050565b5090565b505050505056606060405236156100f05760e060020a600035046306fdde0381146101b857806318160ddd146102135780631b9a85d71461021c5780632a11ced0146102a35780632a36b028146102e95780632ab6ceae146102fb578063313ce5671461036957806341c0e1b5146103755780635a3b7e421461039f57806370a08231146103fc5780637bd703e81461041457806395d89b411461042857806396e4ee3d14610488578063a035b1fe14610496578063a5c863d4146104a8578063ba4763e7146104ba578063be1271c4146104de578063c4e41b2214610513578063d50095841461051d578063f8b2cb4f14610531575b600480546005805461010090920460ff16670de0b6b3a7640000340402918201905533600160a060020a0390811660008181526006602052604080822080548601905560095481517fe3468ed100000000000000000000000000000000000000000000000000000000815296870193909352516104dc95929093169263e3468ed1926024818101939291829003018183876161da5a03f115610002575050600854604051600160a060020a03919091169150600090349082818181858883f150505050505b50565b6040805160028054602060018216156101000260001901909116829004601f8101829004820284018201909452838352610557939083018282801561064a5780601f1061061f5761010080835404028352916020019161064a565b6105c560055481565b6105d760408051600480546009546005547fe3c0b90700000000000000000000000000000000000000000000000000000000855261010090920460ff1690910491830182905292516000939192600160a060020a03929092169163e3c0b9079160248281019287929190829003018183876161da5a03f11561000257505050600191505090565b6105eb60043560078054829081101561000257506000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880154600160a060020a031681565b6105eb600854600160a060020a031681565b6105c5604080516009547f12065fe00000000000000000000000000000000000000000000000000000000082529151600092600160a060020a0316916312065fe0916004828101926020929190829003018187876161da5a03f11561000257505060405151915061051a9050565b61060860045460ff1681565b6104dc600054600160a060020a039081163391909116141561065257600054600160a060020a0316ff5b61055760018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561064a5780601f1061061f5761010080835404028352916020019161064a565b6105c560043560066020526000908152604090205481565b6105c5600435600061065461065b83610538565b61055760038054604080516020601f6002600186161561010002600019019095169490940493840181900481028201810190925282815292919083018282801561064a5780601f1061061f5761010080835404028352916020019161064a565b6105c56004356024355b0290565b61060860045460ff6101009091041681565b6105eb600954600160a060020a031681565b6008805473ffffffffffffffffffffffffffffffffffffffff19166004351790555b005b6104dc600435600054600160a060020a03908116339190911614156101b55760048054610100830261ff001990911617905550565b6105c56005545b90565b6105eb600954600160a060020a031661051a565b6105c56004355b600160a060020a0381166000908152600660205260409020545b919050565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156105b75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60408051918252519081900360200190f35b604080519115158252519081900360200190f35b60408051600160a060020a03929092168252519081900360200190f35b6040805160ff929092168252519081900360200190f35b820191906000526020600020905b81548152906001019060200180831161062d57829003601f168201915b505050505081565b565b9050610552565b600261049256",
    unlinked_binary: "60a060405260096060527f546f6b656e20302e3600000000000000000000000000000000000000000000006080526001805460008290527f546f6b656e20302e36000000000000000000000000000000000000000000001282556100b4907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf66020600283861615610100026000190190931692909204601f01919091048101905b8082111561016e57600081556001016100a0565b50506004805461ff001916610a001790556000600555604051610af7388190039081908339810160405280805182019190602001805190602001909190805182019190602001805190602001909190505060008054600160a060020a031916331790558360026000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061017257805160ff19168380011785555b506101a29291506100a0565b5090565b82800160010185558215610162579182015b82811115610162578251826000505591602001919060010190610184565b50508160036000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101fb57805160ff19168380011785555b5061022b9291506100a0565b828001600101855582156101ef579182015b828111156101ef57825182600050559160200191906001019061020d565b50506004805460ff19168417905560088054600160a060020a0319168217905560405161020a8061028b833901809050604051809103906000f060098054600160a060020a03191691909117905550505050610662806104956000396000f360606040526706f05b59d3b200006002556101ec8061001e6000396000f3606060405260e060020a600035046312065fe0811461003c5780632a11ced014610052578063e3468ed114610098578063e3c0b907146100dc575b005b30600160a060020a0316315b6060908152602090f35b61004860043560018054829081101561000257506000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60154600160a060020a031681565b61003a6004356001805480820180835582818380158290116101ad578183600052602060002091820191016101ad91905b808211156101e1576000815584016100c9565b61003a600435600254600160a060020a033016319081038290046000805b60015460ff831610156101e5576001805460ff8416908110156100025760008290527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601548154600160a060020a0391909116925060ff841690811015610002577fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60154604051600160a060020a03919091169150600090859082818181858883f15050505050600191909101906100fa565b50505091909060005260206000209001600050805473ffffffffffffffffffffffffffffffffffffffff1916831790555050565b5090565b505050505056606060405236156100f05760e060020a600035046306fdde0381146101b857806318160ddd146102135780631b9a85d71461021c5780632a11ced0146102a35780632a36b028146102e95780632ab6ceae146102fb578063313ce5671461036957806341c0e1b5146103755780635a3b7e421461039f57806370a08231146103fc5780637bd703e81461041457806395d89b411461042857806396e4ee3d14610488578063a035b1fe14610496578063a5c863d4146104a8578063ba4763e7146104ba578063be1271c4146104de578063c4e41b2214610513578063d50095841461051d578063f8b2cb4f14610531575b600480546005805461010090920460ff16670de0b6b3a7640000340402918201905533600160a060020a0390811660008181526006602052604080822080548601905560095481517fe3468ed100000000000000000000000000000000000000000000000000000000815296870193909352516104dc95929093169263e3468ed1926024818101939291829003018183876161da5a03f115610002575050600854604051600160a060020a03919091169150600090349082818181858883f150505050505b50565b6040805160028054602060018216156101000260001901909116829004601f8101829004820284018201909452838352610557939083018282801561064a5780601f1061061f5761010080835404028352916020019161064a565b6105c560055481565b6105d760408051600480546009546005547fe3c0b90700000000000000000000000000000000000000000000000000000000855261010090920460ff1690910491830182905292516000939192600160a060020a03929092169163e3c0b9079160248281019287929190829003018183876161da5a03f11561000257505050600191505090565b6105eb60043560078054829081101561000257506000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880154600160a060020a031681565b6105eb600854600160a060020a031681565b6105c5604080516009547f12065fe00000000000000000000000000000000000000000000000000000000082529151600092600160a060020a0316916312065fe0916004828101926020929190829003018187876161da5a03f11561000257505060405151915061051a9050565b61060860045460ff1681565b6104dc600054600160a060020a039081163391909116141561065257600054600160a060020a0316ff5b61055760018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561064a5780601f1061061f5761010080835404028352916020019161064a565b6105c560043560066020526000908152604090205481565b6105c5600435600061065461065b83610538565b61055760038054604080516020601f6002600186161561010002600019019095169490940493840181900481028201810190925282815292919083018282801561064a5780601f1061061f5761010080835404028352916020019161064a565b6105c56004356024355b0290565b61060860045460ff6101009091041681565b6105eb600954600160a060020a031681565b6008805473ffffffffffffffffffffffffffffffffffffffff19166004351790555b005b6104dc600435600054600160a060020a03908116339190911614156101b55760048054610100830261ff001990911617905550565b6105c56005545b90565b6105eb600954600160a060020a031661051a565b6105c56004355b600160a060020a0381166000908152600660205260409020545b919050565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156105b75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60408051918252519081900360200190f35b604080519115158252519081900360200190f35b60408051600160a060020a03929092168252519081900360200190f35b6040805160ff929092168252519081900360200190f35b820191906000526020600020905b81548152906001019060200180831161062d57829003601f168201915b505050505081565b565b9050610552565b600261049256",
    address: "0x76e2e0ce024f38f5cb7ad2a0022396336fa7d629",
    generated_with: "2.0.9",
    contract_name: "MyToken"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("MyToken error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("MyToken error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("MyToken error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("MyToken error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.MyToken = Contract;
  }

})();
