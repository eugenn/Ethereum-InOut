// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[],"name":"sendToHolders","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"inWallet","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"type":"function"},{"constant":false,"inputs":[{"name":"addr","type":"address"}],"name":"getTokenBalance","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[],"name":"kill","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"standard","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":false,"inputs":[],"name":"getHoldersBalance","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"addr","type":"address"}],"name":"getBalanceInEth","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[],"name":"getHoldersSize","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"holders","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[],"name":"getHoldersContract","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":false,"inputs":[{"name":"amount","type":"uint256"},{"name":"conversionRate","type":"uint256"}],"name":"convert","outputs":[{"name":"convertedAmount","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"price","outputs":[{"name":"","type":"uint8"}],"type":"function"},{"constant":false,"inputs":[{"name":"addr","type":"address"}],"name":"setInwallet","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"nPrice","type":"uint8"}],"name":"setPrice","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"getTotalSupply","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"inputs":[{"name":"tokenName","type":"string"},{"name":"decimalUnits","type":"uint8"},{"name":"tokenSymbol","type":"string"},{"name":"inputWallet","type":"address"}],"type":"constructor"}],
    binary: "60a060405260096060527f546f6b656e20302e3600000000000000000000000000000000000000000000006080526001805460008290527f546f6b656e20302e36000000000000000000000000000000000000000000001282556100b4907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf66020600283861615610100026000190190931692909204601f01919091048101905b8082111561016e57600081556001016100a0565b50506004805461ff001916610a001790556000600555604051610ace388190039081908339810160405280805182019190602001805190602001909190805182019190602001805190602001909190505060008054600160a060020a031916331790558360026000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061017257805160ff19168380011785555b506101a29291506100a0565b5090565b82800160010185558215610162579182015b82811115610162578251826000505591602001919060010190610184565b50508160036000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101fb57805160ff19168380011785555b5061022b9291506100a0565b828001600101855582156101ef579182015b828111156101ef57825182600050559160200191906001019061020d565b50506004805460ff19168417905560078054600160a060020a031916821790556040516101d98061028b833901809050604051809103906000f060088054600160a060020a0319169190911790555050505061066a806104646000396000f360606040526706f05b59d3b200006001556101bb8061001e6000396000f3606060405260e060020a600035046312065fe0811461004757806325979983146100595780632a11ced0146100df578063de8fa43114610124578063e3468ed11461012f575b005b61017430600160a060020a0316315b90565b61004560043560015430600160a060020a0316310381900460005b60005460ff8216101561017e576000805460ff831690811015610002578180527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630154604051600160a060020a03919091169190849082818181858883f15050505050600101610074565b610174600435600080548290811015610002575080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630154600160a060020a031681565b610174600054610056565b610045600435600080546001810180835582818380158290116101835781836000526020600020918201910161018391905b808211156101b757848155600101610161565b6060908152602090f35b505050565b50505091909060005260206000209001600050805473ffffffffffffffffffffffffffffffffffffffff1916831790555050565b509056606060405236156100f05760e060020a600035046306fdde0381146101b857806318160ddd146102135780631b9a85d71461021c5780632a36b02814610297578063313ce567146102a95780633aecd0e3146102b557806341c0e1b5146102db5780635a3b7e42146103055780635fe05ee01461036257806370a08231146103d05780637bd703e8146103e857806381054e83146103fc5780638188f71c1461046a57806392bc527b1461047c57806395d89b411461048f57806396e4ee3d146104ef578063a035b1fe146104fd578063ba4763e71461050f578063be1271c414610533578063c4e41b2214610568575b600480546005805461010090920460ff16670de0b6b3a7640000340402918201905533600160a060020a0390811660008181526006602052604080822080548601905560085481517fe3468ed1000000000000000000000000000000000000000000000000000000008152968701939093525161053195929093169263e3468ed1926024818101939291829003018183876161da5a03f115610002575050600754604051600160a060020a03919091169150600090349082818181858883f150505050505b50565b6040805160028054602060018216156101000260001901909116829004601f810182900482028401820190945283835261057393908301828280156106525780601f1061062757610100808354040283529160200191610652565b6105e160055481565b60085460408051600480546005547f2597998300000000000000000000000000000000000000000000000000000000845261010090910460ff169004908201819052915161053193600160a060020a0316916325979983916024828101926000929190829003018183876161da5a03f1156100025750505050565b6105f3600754600160a060020a031681565b61061060045460ff1681565b6105e16004355b600160a060020a0381166000908152600660205260409020545b919050565b610531600054600160a060020a039081163391909116141561065a57600054600160a060020a0316ff5b60408051600180546020600282841615610100026000190190921691909104601f810182900482028401820190945283835261057393908301828280156106525780601f1061062757610100808354040283529160200191610652565b6105e1600854604080517f12065fe00000000000000000000000000000000000000000000000000000000081529051600092600160a060020a0316916312065fe0916004828101926020929190829003018187876161da5a03f11561000257505060405151915061048c9050565b6105e160043560066020526000908152604090205481565b6105e1600435600061065c610663836102bc565b6105e1600854604080517fde8fa4310000000000000000000000000000000000000000000000000000000081529051600092600160a060020a03169163de8fa431916004828101926020929190829003018187876161da5a03f11561000257505060405151915061048c9050565b6105f3600854600160a060020a031681565b6105f3600854600160a060020a03165b90565b61057360038054604080516020601f600260018616156101000260001901909516949094049384018190048102820181019092528281529291908301828280156106525780601f1061062757610100808354040283529160200191610652565b6105e16004356024355b0290565b61061060045460ff6101009091041681565b6007805473ffffffffffffffffffffffffffffffffffffffff19166004351790555b005b610531600435600054600160a060020a03908116339190911614156101b55760048054610100830261ff001990911617905550565b6105e160055461048c565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156105d35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60408051918252519081900360200190f35b60408051600160a060020a03929092168252519081900360200190f35b6040805160ff929092168252519081900360200190f35b820191906000526020600020905b81548152906001019060200180831161063557829003601f168201915b505050505081565b565b90506102d6565b60026104f956",
    unlinked_binary: "60a060405260096060527f546f6b656e20302e3600000000000000000000000000000000000000000000006080526001805460008290527f546f6b656e20302e36000000000000000000000000000000000000000000001282556100b4907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf66020600283861615610100026000190190931692909204601f01919091048101905b8082111561016e57600081556001016100a0565b50506004805461ff001916610a001790556000600555604051610ace388190039081908339810160405280805182019190602001805190602001909190805182019190602001805190602001909190505060008054600160a060020a031916331790558360026000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061017257805160ff19168380011785555b506101a29291506100a0565b5090565b82800160010185558215610162579182015b82811115610162578251826000505591602001919060010190610184565b50508160036000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101fb57805160ff19168380011785555b5061022b9291506100a0565b828001600101855582156101ef579182015b828111156101ef57825182600050559160200191906001019061020d565b50506004805460ff19168417905560078054600160a060020a031916821790556040516101d98061028b833901809050604051809103906000f060088054600160a060020a0319169190911790555050505061066a806104646000396000f360606040526706f05b59d3b200006001556101bb8061001e6000396000f3606060405260e060020a600035046312065fe0811461004757806325979983146100595780632a11ced0146100df578063de8fa43114610124578063e3468ed11461012f575b005b61017430600160a060020a0316315b90565b61004560043560015430600160a060020a0316310381900460005b60005460ff8216101561017e576000805460ff831690811015610002578180527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630154604051600160a060020a03919091169190849082818181858883f15050505050600101610074565b610174600435600080548290811015610002575080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630154600160a060020a031681565b610174600054610056565b610045600435600080546001810180835582818380158290116101835781836000526020600020918201910161018391905b808211156101b757848155600101610161565b6060908152602090f35b505050565b50505091909060005260206000209001600050805473ffffffffffffffffffffffffffffffffffffffff1916831790555050565b509056606060405236156100f05760e060020a600035046306fdde0381146101b857806318160ddd146102135780631b9a85d71461021c5780632a36b02814610297578063313ce567146102a95780633aecd0e3146102b557806341c0e1b5146102db5780635a3b7e42146103055780635fe05ee01461036257806370a08231146103d05780637bd703e8146103e857806381054e83146103fc5780638188f71c1461046a57806392bc527b1461047c57806395d89b411461048f57806396e4ee3d146104ef578063a035b1fe146104fd578063ba4763e71461050f578063be1271c414610533578063c4e41b2214610568575b600480546005805461010090920460ff16670de0b6b3a7640000340402918201905533600160a060020a0390811660008181526006602052604080822080548601905560085481517fe3468ed1000000000000000000000000000000000000000000000000000000008152968701939093525161053195929093169263e3468ed1926024818101939291829003018183876161da5a03f115610002575050600754604051600160a060020a03919091169150600090349082818181858883f150505050505b50565b6040805160028054602060018216156101000260001901909116829004601f810182900482028401820190945283835261057393908301828280156106525780601f1061062757610100808354040283529160200191610652565b6105e160055481565b60085460408051600480546005547f2597998300000000000000000000000000000000000000000000000000000000845261010090910460ff169004908201819052915161053193600160a060020a0316916325979983916024828101926000929190829003018183876161da5a03f1156100025750505050565b6105f3600754600160a060020a031681565b61061060045460ff1681565b6105e16004355b600160a060020a0381166000908152600660205260409020545b919050565b610531600054600160a060020a039081163391909116141561065a57600054600160a060020a0316ff5b60408051600180546020600282841615610100026000190190921691909104601f810182900482028401820190945283835261057393908301828280156106525780601f1061062757610100808354040283529160200191610652565b6105e1600854604080517f12065fe00000000000000000000000000000000000000000000000000000000081529051600092600160a060020a0316916312065fe0916004828101926020929190829003018187876161da5a03f11561000257505060405151915061048c9050565b6105e160043560066020526000908152604090205481565b6105e1600435600061065c610663836102bc565b6105e1600854604080517fde8fa4310000000000000000000000000000000000000000000000000000000081529051600092600160a060020a03169163de8fa431916004828101926020929190829003018187876161da5a03f11561000257505060405151915061048c9050565b6105f3600854600160a060020a031681565b6105f3600854600160a060020a03165b90565b61057360038054604080516020601f600260018616156101000260001901909516949094049384018190048102820181019092528281529291908301828280156106525780601f1061062757610100808354040283529160200191610652565b6105e16004356024355b0290565b61061060045460ff6101009091041681565b6007805473ffffffffffffffffffffffffffffffffffffffff19166004351790555b005b610531600435600054600160a060020a03908116339190911614156101b55760048054610100830261ff001990911617905550565b6105e160055461048c565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156105d35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60408051918252519081900360200190f35b60408051600160a060020a03929092168252519081900360200190f35b6040805160ff929092168252519081900360200190f35b820191906000526020600020905b81548152906001019060200180831161063557829003601f168201915b505050505081565b565b90506102d6565b60026104f956",
    address: "0x76e2e0ce024f38f5cb7ad2a0022396336fa7d629",
    generated_with: "2.0.9",
    contract_name: "MyToken"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("MyToken error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("MyToken error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("MyToken error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("MyToken error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.MyToken = Contract;
  }

})();
